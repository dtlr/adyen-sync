name: Adyen Sync

on:
  push:
    branches:
      - main
      - qa
      - dev
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JDNA_REGISTRY: ghcr.io/dtlr
  IMAGE_NAME: adyen-sync

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.JDNA_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.JDNA_REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=JMC Adyen Sync
            org.opencontainers.image.description=Syncs Adyen data to JMC
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/blob/main/README.md
            org.opencontainers.image.vendor=DTLR, Inc.
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=tag
            type=edge,enable=true,priority=700,branch=$repo.default_branch

      - name: Build and push
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.JDNA_REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      # - name: Trigger release
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const [owner, repo] = '${{ github.repository }}'.split('/')
      #       await github.rest.actions.createWorkflowDispatch({
      #         owner,
      #         repo,
      #         workflow_id: 'release.yml',
      #         ref: "${{ github.ref_name }}",

      #         inputs: { tag: output }
      #       })
