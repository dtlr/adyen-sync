name: Setup Neon

on:
  push:
    branches:
      - qa
      - main
    paths:
      - 'scripts/**'
      - 'property.json'
  workflow_dispatch:

jobs:
  env-setup:
    runs-on: ubuntu-latest
    outputs:
      banners: ${{ steps.read-property.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          sparse-checkout: |
            property.json

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Read property.json to get banners
        id: read-property
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const propertyData = JSON.parse(fs.readFileSync('./property.json', 'utf8'))
            const banners = Object.keys(propertyData)
            return banners

  neon-setup:
    runs-on: ubuntu-latest
    needs: [env-setup]
    env:
      APP_ENV: ${{ github.ref_name == 'main' && 'live' || 'test' }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: 1password/load-secrets-action@v2
        id: load_secrets
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          CONNECT_TOKEN: op://Engineering/jrurekjt6arylw3fnmwy53rkwu/credential
          NEON_API_KEY: op://Engineering/lus42zxvxdkmb6ln5cjcll7qnm/api_key
          NEON_ORG_ID: op://Engineering/lus42zxvxdkmb6ln5cjcll7qnm/dtlr_org_id
          APP_NEON_DATABASE_URI:
            op://Engineering/jdna-sync-${{ matrix.banners }}-${{ env.APP_ENV }}/connection_string

      - name: Install dependencies
        run: npm ci

      - name: Ensure Neon Project is created
        env:
          CONNECT_TOKEN: ${{ steps.load_secrets.outputs.CONNECT_TOKEN }}
          NEON_API_KEY: ${{ steps.load_secrets.outputs.NEON_API_KEY }}
          NEON_ORG_ID: ${{ steps.load_secrets.outputs.NEON_ORG_ID }}
          APP_NEON_DATABASE_URI: ${{ steps.load_secrets.outputs.APP_NEON_DATABASE_URI }}
        run: npm run neon:create

      - name: Ensure schema is generated
        env:
          CONNECT_TOKEN: ${{ steps.load_secrets.outputs.CONNECT_TOKEN }}
          NEON_API_KEY: ${{ steps.load_secrets.outputs.NEON_API_KEY }}
          NEON_ORG_ID: ${{ steps.load_secrets.outputs.NEON_ORG_ID }}
          APP_NEON_DATABASE_URI: ${{ steps.load_secrets.outputs.APP_NEON_DATABASE_URI }}
        run: npm run neon:generate

  neon-migrate:
    runs-on: ubuntu-latest
    needs: [env-setup, neon-setup]
    strategy:
      matrix:
        banners: ${{ fromJson(needs.env-setup.outputs.banners) }}
    env:
      APP_ENV: ${{ github.ref_name == 'main' && 'live' || 'test' }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: 1password/load-secrets-action@v2
        id: load_secrets
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          CONNECT_TOKEN: op://Engineering/jrurekjt6arylw3fnmwy53rkwu/credential
          NEON_API_KEY: op://Engineering/lus42zxvxdkmb6ln5cjcll7qnm/api_key
          NEON_ORG_ID: op://Engineering/lus42zxvxdkmb6ln5cjcll7qnm/dtlr_org_id
          APP_NEON_DATABASE_URI:
            op://Engineering/jdna-sync-${{ matrix.banners }}-${{ env.APP_ENV }}/connection_string

      - name: Install dependencies
        run: npm ci

      - name: Ensure Neon Project is migrated
        env:
          CONNECT_TOKEN: ${{ steps.load_secrets.outputs.CONNECT_TOKEN }}
          NEON_API_KEY: ${{ steps.load_secrets.outputs.NEON_API_KEY }}
          NEON_ORG_ID: ${{ steps.load_secrets.outputs.NEON_ORG_ID }}
          APP_NEON_DATABASE_URI: ${{ steps.load_secrets.outputs.APP_NEON_DATABASE_URI }}
        run: npm run neon:migrate
